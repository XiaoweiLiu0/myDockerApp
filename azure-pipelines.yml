# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

variables:
  template: variables.yml
  vmImageName: 'ubuntu-latest'

resources:
- repo: self
    
stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: ${{ variables.imageRepository }}
        dockerfile: $(dockerfilePath)
        containerRegistry: ${{ variables.dockerRegistryServiceConnection }}
        tags: |
          $(tag)
    - task: Bash@3
      displayName: "Docker Clean"
      inputs:
        targetType: "inline"
        script: |
          docker rmi $(containerRegistry)/$(imageRepository):$(tag)
          docker system prune -a --force
    # - task: AzureCLI@2
    #   displayName: "Helm Save & Push"
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     scriptType: bash
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       appVersion="$(tag)"
    #       echo "App version: $appVersion"
    #       export HELM_EXPERIMENTAL_OCI=1
    #       echo $servicePrincipalKey | helm registry login $(acrUrl) --username $servicePrincipalId --password-stdin
    #       rm -rf *.tgz
    #       helm chart save $(helm package --app-version "$appVersion" --version $(tag) . | grep -o '/.*.tgz') $(acrUrl)/helm/$(repoName)
    #       helm chart push $(acrUrl)/helm/$(repoName):$(tag)
    #       helm chart remove $(acrUrl)/helm/$(repoName):$(tag)
    #     addSpnToEnvironment: true
    #     workingDirectory: "helm/"