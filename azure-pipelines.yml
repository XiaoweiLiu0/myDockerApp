# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'xwliu-container-registry-conn'
  imageRepository: 'xwliuhelloworld'
  containerRegistry: 'xwliucontainerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  acrUrl: 'xwliucontainerregistry.azurecr.io'
  repoName: 'xwliuhelloworld'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Bash@3
      displayName: "Docker Clean"
      inputs:
        targetType: "inline"
        script: |
          docker rmi $(containerRegistry)/$(imageRepository):$(tag)
          docker system prune -a --force
    - task: AzureCLI@2
      displayName: "Helm Save & Push"
      inputs:
        azureSubscription: 1dd5ca7b-c583-4e90-ad03-00d3325971b7
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          appVersion="$(tag)"
          echo "App version: $appVersion"
          export HELM_EXPERIMENTAL_OCI=1
          echo $servicePrincipalKey | helm registry login $(acrUrl) --username $servicePrincipalId --password-stdin
          rm -rf *.tgz
          helm chart save $(helm package --app-version "$appVersion" --version $(tag) . | grep -o '/.*.tgz') $(acrUrl)/helm/$(repoName)
          helm chart push $(acrUrl)/helm/$(repoName):$(tag)
          helm chart remove $(acrUrl)/helm/$(repoName):$(tag)
        addSpnToEnvironment: true
        workingDirectory: "helm/"